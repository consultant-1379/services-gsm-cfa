#DEFINE_CONSTANTS()

SELECT
	events.CAUSE_GROUP as 'Cause Group ID',
	events.CAUSE_GROUP_DESC as 'Cause Group',
	events.NO_OF_ERRORS as 'Failures',
	isnull(subscribers.NO_OF_SUBSCRIBERS,0) as 'Impacted Subscribers',
    :GROUP_NAME as GroupName

FROM
(
	SELECT
    	err.CAUSE_GROUP as CAUSE_GROUP,
    	err.CAUSE_GROUP_DESC as CAUSE_GROUP_DESC,
    	sum(isnull(err.NO_OF_ERRORS, 0)) as NO_OF_ERRORS
    FROM 
    (
		SELECT	
        	ccref.CAUSE_GROUP, 
        	CAUSE_GROUP_DESC, 
        	sum(NO_OF_ERRORS)
		FROM
			dc.${errAggregationView} errRef,
        	dc.DIM_E_GSM_CFA_CAUSE_GROUP ccref,
			dc.GROUP_TYPE_E_RAT_VEND_HIER3 controllerGroup
		WHERE
			#GET_DATETIME_RANGE()
        	AND controllerGroup.GROUP_NAME = :GROUP_NAME
        	AND controllerGroup.HIER3_ID = errRef.HIER3_ID
        	AND ccref.CAUSE_GROUP = errRef.CAUSE_GROUP
			#if ($display == "chart")
				and
				errRef.CAUSE_GROUP IN ($causeCodeIds)
			#end
        GROUP BY
        	ccref.CAUSE_GROUP,
        	CAUSE_GROUP_DESC
	)AS err (CAUSE_GROUP, CAUSE_GROUP_DESC, NO_OF_ERRORS)
	GROUP BY
    	err.CAUSE_GROUP,
    	err.CAUSE_GROUP_DESC
)events,
(
	SELECT
    	sub.CAUSE_GROUP as CAUSE_GROUP,
    	isnull(count(distinct(IMSI)),0) as NO_OF_SUBSCRIBERS
    FROM 
    (
    	#foreach ($errtable in $TECH_PACK_LIST.getAllRawTables())
    	(
			SELECT	
				ccref.CAUSE_GROUP,
				IMSI
			FROM
            	dc.${errtable} errRef,
    			dc.DIM_E_GSM_CFA_CAUSE_GROUP ccref,
            	dc.GROUP_TYPE_E_RAT_VEND_HIER3 controllerGroup
			WHERE
            	#GET_DATETIME_RANGE()
            	AND #GET_TAC_EXCLUSION()
    			AND controllerGroup.HIER3_ID = errRef.HIER3_ID
    			#if ($display == "chart")
    				and
    				errRef.CAUSE_GROUP in ($causeCodeIds)
    			#end
    			#if($CATEGORY_ID != "")	
    				and
    				CATEGORY_ID = :CATEGORY_ID
    			#end
			GROUP BY
				ccref.CAUSE_GROUP,
				IMSI
        )
    		#if($velocityCount < $TECH_PACK_LIST.getAllRawTables().size())
    			union all
    		#end
    	#end
    	) as sub (CAUSE_GROUP, IMSI)
		GROUP BY
			sub.CAUSE_GROUP) subscribers
WHERE
	events.CAUSE_GROUP *= subscribers.CAUSE_GROUP
order by
	Failures DESC
	